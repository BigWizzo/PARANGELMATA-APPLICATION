{"version":3,"sources":["components/CountryForm.js","components/CountryDescription.js","components/CountryList.js","redux/actions/livestockActions.js","App.js","redux/reducers/livestockReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["CountryForm","onSub","useState","nat","setNat","className","onSubmit","e","preventDefault","charAt","toUpperCase","slice","alert","type","value","placeholder","onChange","target","CountryDescription","desc","trends","countryCode","label","yearOne","yearTwo","yearOneVal","yearTwoVal","currentStatus","classname","CountryList","dispatch","useDispatch","state","useSelector","livestock","country","nation","a","axios","get","response","myLabels","myData","countryLabel","data","map","currentCountry","toLowerCase","Object","keys","forEach","key","push","values","labels","toString","natCode","yr1","yr2","yr1Val","parseInt","yr2Val","isNaN","console","log","payload","status","getData","loading","length","App","initialState","datasets","backgroundColor","borderColor","borderWidth","livestockReducer","action","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a9bcde9.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst CountryForm = ({ onSub }) => {\n  const [nat, setNat] = useState('');\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (nat) {\n      setNat(nat.charAt(0).toUpperCase() + nat.slice(1));\n    }\n\n    if (!nat) {\n      alert('Please enter Country Name');\n    }\n\n    onSub({ nat });\n  };\n\n  return (\n    <>\n      <form className=\"country-form m-auto mb-5\" onSubmit={onSubmit}>\n        <div className=\"my-form mb-3\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            value={nat}\n            placeholder=\"Enter Country\"\n            onChange={(e) => setNat(e.target.value)}\n          />\n        </div>\n        <div className=\"d-grid gap-2 d-block\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary font-weight-bolder\"\n            value=\"Submit\"\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default CountryForm;\n","const CountryDescription = ({ desc, trends }) => {\n  const { countryCode, label } = desc;\n  const { yearOne, yearTwo, yearOneVal, yearTwoVal, currentStatus } = trends;\n  return (\n    <>\n      <div className=\"mb-3\">\n        <div className=\"row g-0\">\n          <div className=\"col-md-8\">\n            <div className=\"card-body text-left\">\n              <p className=\"country-wrap font-22\">\n                <span>Country Name: </span>\n                <span className=\"country-code green-800 font-22\">\n                  {label.toUpperCase()}\n                </span>\n              </p>\n              <p className=\"card-text\">\n                <span>Country Code: </span>\n                <span className=\"card-title\">{countryCode}</span>\n              </p>\n              <p className=\"mute-p\">\n                <small className=\"text-muted\">\n                  In the last two years, There has been {currentStatus} of\n                  livestock production in {label}. The year {yearOne} had{' '}\n                  {yearOneVal} index and {yearTwo} had {yearTwoVal} index.\n                </small>\n              </p>\n            </div>\n          </div>\n          <div className=\"col-md-4 text-center\">\n            <h4 className=\"card-hed font-italic\">TRENDS</h4>\n            <hr classname=\"hr\" />\n            <div className=\"card-body\">\n              <div>{yearOne}</div>\n              <div className=\"icon-div py-3\">\n                <div className=\"icon-span \">\n                  {yearTwoVal > yearOneVal ? (\n                    <div className=\"\">\n                      <p className=\"m-0 font-10 text-success\">Increase</p>\n                      <p className=\"increase m-0\">\n                        <i className=\"far fa-arrow-alt-circle-up font-22 text-success\"></i>\n                      </p>\n                    </div>\n                  ) : yearTwoVal < yearOneVal ? (\n                    <div className=\"\">\n                      <p className=\"m-0 font-10 text-danger\">Decrease</p>\n                      <p className=\"decrease m-0\">\n                        <i className=\"far fa-arrow-alt-circle-down font-22 text-danger\"></i>\n                      </p>\n                    </div>\n                  ) : (\n                    <div>\n                      <p className=\"m-0 font-10 text-success\">No Change</p>\n                      <p className=\"no-change m-0\">\n                        <i className=\"fas fa-arrows-alt-h font-22\"></i>\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div>{yearTwo}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CountryDescription;\n","import { Bar } from 'react-chartjs-2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getData } from '../redux/actions/livestockActions';\nimport CountryForm from './CountryForm';\nimport CountryDescription from './CountryDescription';\n\nconst CountryList = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.livestock);\n  const fetchData = (country) => {\n    dispatch(\n      getData({\n        nation: country.nat,\n      }),\n    );\n  };\n\n  return (\n    <div className=\"main\">\n      <h1 className=\"py-4 text-center\">Parangelmata</h1>\n      <CountryForm onSub={fetchData} />\n      <div className=\"content\">\n        {state.loading && <h4 className=\"text-center\">Loading...</h4>}\n        {state.data.labels.length > 0 ? (\n          <div className=\"main-content-wrapper row m-0 p-3\">\n            <div className=\"chart-wrapper col-md-6\">\n              <Bar data={state.data} />\n            </div>\n            <div className=\"country-desc col-md-6\">\n              <CountryDescription desc={state.desc} trends={state.trends} />\n            </div>\n          </div>\n        ) : (\n          <div className=\"empty text-center\">\n            {!state.loading && (\n              <h4>Please enter Country Name and hit Submit</h4>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CountryList;\n","/* eslint-disable array-callback-return */\nimport axios from 'axios';\nexport const getData = ({ nation }) => {\n  return async (dispatch) => {\n    try {\n      dispatch({\n        type: 'AWAITING_LIVESTOCK',\n      });\n      const response = await axios.get(\n        'https://anmlfarm.com/data/countrydata.json',\n      );\n\n      const myLabels = [];\n      const myData = [];\n      const countryLabel = [];\n\n      response.data.map((country) => {\n        const currentCountry = country['Country Name'];\n        if (currentCountry.toLowerCase() === nation.toLowerCase()) {\n          Object.keys(country).forEach((key) => {\n            myLabels.push(key);\n          });\n          Object.values(country).forEach((value) => {\n            myData.push(value);\n          });\n          countryLabel.push(currentCountry);\n        }\n      });\n\n      const data = myData.slice(41, 61);\n      const labels = myLabels.slice(41, 61);\n      const label = countryLabel.toString();\n      const natCode = myData.slice(62, 63).toString();\n      const yr1 = myLabels.slice(59, 60).toString();\n      const yr2 = myLabels.slice(60, 61).toString();\n      let yr1Val = parseInt(myData.slice(59, 60));\n      let yr2Val = parseInt(myData.slice(60, 61));\n\n      if (isNaN(yr1Val) === true) {\n        yr1Val = 'no recorded';\n      }\n\n      if (isNaN(yr2Val) === true) {\n        yr2Val = 'no recorded';\n      }\n\n      console.log(yr1Val);\n      console.log(yr2Val);\n\n      const status = () => {\n        if (yr1Val === yr2Val) {\n          return 'no change';\n        } else if (yr1Val < yr2Val) {\n          return 'a decrease';\n        } else {\n          return 'an increase';\n        }\n      };\n\n      dispatch({\n        type: 'SUCCESS_LIVESTOCK',\n        payload: {\n          data,\n          labels,\n          label,\n          natCode,\n          status,\n          yr1,\n          yr2,\n          yr1Val,\n          yr2Val,\n        },\n      });\n    } catch (error) {\n      dispatch({\n        type: 'REJECTED_LIVESTOCK',\n      });\n    }\n  };\n};\n","import CountryList from './components/CountryList';\n\nfunction App() {\n  return (\n    <div className=\"App text-light\">\n      <CountryList />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  loading: false,\n  data: {\n    labels: [],\n    datasets: [\n      {\n        label: '',\n        data: [],\n        backgroundColor: ['rgba(0, 128, 0, 0.5)'],\n        borderColor: ['rgb(0, 128, 0)'],\n        borderWidth: 1,\n      },\n    ],\n  },\n  desc: {\n    label: '',\n    countryCode: '',\n  },\n  trends: {\n    yearOne: '',\n    yearTwo: '',\n    currentStatus: '',\n    yearOneVal: '',\n    yearTwoVal: '',\n  },\n};\n\nconst livestockReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'AWAITING_LIVESTOCK':\n      return {\n        ...state,\n        loading: true,\n      };\n    case 'REJECTED_LIVESTOCK':\n      return {\n        ...state,\n        loading: false,\n      };\n    case 'SUCCESS_LIVESTOCK':\n      return {\n        ...state,\n        loading: false,\n        data: {\n          labels: payload.labels,\n          datasets: [\n            {\n              label: payload.label,\n              data: payload.data,\n              backgroundColor: ['rgba(0, 128, 0, 0.5)'],\n              borderColor: ['rgb(0, 128, 0)'],\n              borderWidth: 1,\n            },\n          ],\n        },\n        desc: {\n          label: payload.label,\n          countryCode: payload.natCode,\n        },\n        trends: {\n          yearOne: payload.yr1,\n          yearTwo: payload.yr2,\n          currentStatus: payload.status(),\n          yearOneVal: payload.yr1Val,\n          yearTwoVal: payload.yr2Val,\n        },\n      };\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default livestockReducer;\n","import { combineReducers } from 'redux';\nimport livestockReducer from './livestockReducer';\n\nconst rootReducer = combineReducers({\n  livestock: livestockReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}